{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAOQ,EACA,EACA,EACA,EAmBA,EACA,EACA,EACA,EAhCF,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,EAAM,aAAa,CAAC,SAC3B,EAAQ,EAAG,EAAK,IAAI,EACpB,EAAW,CAAI,CAAC,EAAE,CACpB,EAAqB,KA6EzB,SAAS,EAAS,CAAS,CAAE,CAAI,CAAE,CAAI,CAAE,CAAO,EAC9C,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SASrC,OAPA,EAAM,IAAI,CAAG,EACb,EAAM,IAAI,CAAG,EACb,EAAM,WAAW,CAAI,GAAO,MAAA,CAAL,EAAK,KAC5B,EAAM,OAAO,CAAC,EAAE,CAAG,EAEnB,EAAM,MAAM,CAAC,GAEN,CACT,CAEA,SAAS,EAAa,CAAS,CAAE,CAAK,CAAE,CAAO,EAC7C,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,OAAO,CAAC,EAAE,CAAG,eACjB,EAAI,SAAS,CAAC,GAAG,CAAC,gBAEd,EACF,EAAI,SAAS,CAAC,GAAG,CAAC,WAElB,EAAI,SAAS,CAAC,GAAG,CAAC,SAGpB,IAAM,EAAW,SAAS,aAAa,CAAC,KAExC,CAAA,EAAS,WAAW,CAAG,EAEvB,IAAM,EAAc,SAAS,aAAa,CAAC,IAE3C,CAAA,EAAY,WAAW,CAAG,EAE1B,EAAI,MAAM,CAAC,EAAU,GAErB,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WAAM,OAAA,EAAI,MAAM,EAAI,EAAA,IACjC,CAEA,IAAI,EA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar body = table.querySelector(\"tbody\");\nvar rows = _to_consumable_array(body.rows);\nvar firstRow = rows[0];\nvar currentEditingCell = null;\nfunction addForm() {\n    var form = document.createElement(\"form\");\n    var button = document.createElement(\"button\");\n    var selected = document.createElement(\"select\");\n    var labelSelect = document.createElement(\"label\");\n    var options = [\n        new Option(\"Tokyo\", \"Tokyo\"),\n        new Option(\"Singapore\", \"Singapore\"),\n        new Option(\"London\", \"London\"),\n        new Option(\"New York\", \"New York\"),\n        new Option(\"Edinburgh\", \"Edinburgh\"),\n        new Option(\"San Francisco\", \"San Francisco\")\n    ];\n    options.forEach(function(option) {\n        return selected.add(option);\n    });\n    labelSelect.textContent = \"Office:\";\n    labelSelect.append(selected);\n    form.className = \"new-employee-form\";\n    button.textContent = \"Save to table\";\n    var nameForm = addInput(\"name\", \"text\", \"Name\", \"name\");\n    var positionForm = addInput(\"position\", \"text\", \"Position\", \"position\");\n    var ageForm = addInput(\"age\", \"number\", \"Age\", \"age\");\n    var salaryForm = addInput(\"salary\", \"number\", \"Salary\", \"salary\");\n    form.append(nameForm, positionForm, labelSelect, ageForm, salaryForm, button);\n    button.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        var nameEmploye = nameForm.querySelector(\"input\").value.trim();\n        var position = positionForm.querySelector(\"input\").value.trim();\n        var age = Number(ageForm.querySelector(\"input\").value.trim());\n        var salary = Number(salaryForm.querySelector(\"input\").value.trim());\n        var office = selected.value;\n        if (nameEmploye.length < 4) {\n            notification(false, \"Name Error\", \"Name must be at least 4 characters.\");\n            return;\n        }\n        if (age < 18 || age > 90) {\n            notification(false, \"Age Error\", \"Age must be between 18 and 90.\");\n            return;\n        }\n        addEmployeeToTable(nameEmploye, position, office, age, salary);\n        notification(true, \"Success\", \"Employee added successfully.\");\n        form.reset();\n    });\n    document.body.append(form);\n}\nfunction addEmployeeToTable() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var newRow = body.insertRow(-1);\n    args.forEach(function(value, index) {\n        var newCell = newRow.insertCell(index);\n        if (index === 4) newCell.textContent = \"$ \".concat(value.toLocaleString());\n        else newCell.textContent = value;\n    });\n    rows.push(newRow);\n}\nfunction addInput(nameInput, type, text, dataset) {\n    var input = document.createElement(\"input\");\n    var label = document.createElement(\"label\");\n    input.type = type;\n    input.name = nameInput;\n    label.textContent = \"\".concat(text, \":\");\n    input.dataset.qa = dataset;\n    label.append(input);\n    return label;\n}\nfunction notification(isSuccess, title, message) {\n    var mes = document.createElement(\"div\");\n    mes.dataset.qa = \"notification\";\n    mes.classList.add(\"notification\");\n    if (isSuccess) mes.classList.add(\"success\");\n    else mes.classList.add(\"error\");\n    var titleMes = document.createElement(\"h3\");\n    titleMes.textContent = title;\n    var messageText = document.createElement(\"p\");\n    messageText.textContent = message;\n    mes.append(titleMes, messageText);\n    document.body.append(mes);\n    setTimeout(function() {\n        return mes.remove();\n    }, 3000);\n}\nvar currentSortColumn = null;\nvar isAscending = true;\ntable.addEventListener(\"click\", function(e) {\n    var _rows;\n    if (e.target.tagName !== \"TH\") return;\n    var index = e.target.cellIndex;\n    var content = firstRow.cells[index].textContent.trim();\n    var type = !isNaN(content.replace(/[,$]/g, \"\")) ? \"number\" : \"string\";\n    if (currentSortColumn === index) isAscending = !isAscending;\n    else {\n        currentSortColumn = index;\n        isAscending = true;\n    }\n    rows.length = 0;\n    (_rows = rows).push.apply(_rows, _to_consumable_array(body.rows));\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[index].textContent.trim().replace(/[,$]/g, \"\");\n        var cellB = rowB.cells[index].textContent.trim().replace(/[,$]/g, \"\");\n        var result;\n        if (type === \"number\") result = parseFloat(cellA) - parseFloat(cellB);\n        else result = cellA.localeCompare(cellB);\n        return isAscending ? result : -result;\n    });\n    rows.forEach(function(child) {\n        return body.appendChild(child);\n    });\n});\ntable.addEventListener(\"click\", function(e) {\n    if (e.target.tagName !== \"TD\") return;\n    rows.forEach(function(row) {\n        return row.classList.remove(\"active\");\n    });\n    var clickedRow = e.target.parentElement;\n    clickedRow.classList.add(\"active\");\n});\ntable.addEventListener(\"dblclick\", function(e) {\n    if (e.target.tagName !== \"TD\") return;\n    if (currentEditingCell) return;\n    var cell = e.target;\n    var initialValue = cell.textContent.trim();\n    var input = document.createElement(\"input\");\n    input.value = initialValue;\n    input.classList.add(\"cell-input\");\n    cell.textContent = \"\";\n    cell.appendChild(input);\n    input.focus();\n    input.addEventListener(\"keydown\", function(ev) {\n        if (ev.key === \"Enter\") saveChanges(input, cell, initialValue);\n    });\n    input.addEventListener(\"blur\", function() {\n        saveChanges(input, cell, initialValue);\n    });\n    currentEditingCell = cell;\n});\nfunction saveChanges(input, cell, initialValue) {\n    var newValue = input.value.trim();\n    if (newValue === \"\") cell.textContent = initialValue;\n    else cell.textContent = newValue;\n    currentEditingCell = null;\n}\naddForm();\n\n//# sourceMappingURL=index.9124f9bc.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst body = table.querySelector('tbody');\nconst rows = [...body.rows];\nconst firstRow = rows[0];\nlet currentEditingCell = null;\n\nfunction addForm() {\n  const form = document.createElement('form');\n  const button = document.createElement('button');\n  const selected = document.createElement('select');\n  const labelSelect = document.createElement('label');\n\n  const options = [\n    new Option('Tokyo', 'Tokyo'),\n    new Option('Singapore', 'Singapore'),\n    new Option('London', 'London'),\n    new Option('New York', 'New York'),\n    new Option('Edinburgh', 'Edinburgh'),\n    new Option('San Francisco', 'San Francisco'),\n  ];\n\n  options.forEach((option) => selected.add(option));\n\n  labelSelect.textContent = 'Office:';\n  labelSelect.append(selected);\n\n  form.className = 'new-employee-form';\n  button.textContent = 'Save to table';\n\n  const nameForm = addInput('name', 'text', 'Name', 'name');\n  const positionForm = addInput('position', 'text', 'Position', 'position');\n  const ageForm = addInput('age', 'number', 'Age', 'age');\n  const salaryForm = addInput('salary', 'number', 'Salary', 'salary');\n\n  form.append(nameForm, positionForm, labelSelect, ageForm, salaryForm, button);\n\n  button.addEventListener('click', (e) => {\n    e.preventDefault();\n\n    const nameEmploye = nameForm.querySelector('input').value.trim();\n    const position = positionForm.querySelector('input').value.trim();\n    const age = Number(ageForm.querySelector('input').value.trim());\n    const salary = Number(salaryForm.querySelector('input').value.trim());\n    const office = selected.value;\n\n    if (nameEmploye.length < 4) {\n      notification(false, 'Name Error', 'Name must be at least 4 characters.');\n\n      return;\n    }\n\n    if (age < 18 || age > 90) {\n      notification(false, 'Age Error', 'Age must be between 18 and 90.');\n\n      return;\n    }\n\n    addEmployeeToTable(nameEmploye, position, office, age, salary);\n    notification(true, 'Success', 'Employee added successfully.');\n    form.reset();\n  });\n\n  document.body.append(form);\n}\n\nfunction addEmployeeToTable(...args) {\n  const newRow = body.insertRow(-1);\n\n  args.forEach((value, index) => {\n    const newCell = newRow.insertCell(index);\n\n    if (index === 4) {\n      newCell.textContent = `$ ${value.toLocaleString()}`;\n    } else {\n      newCell.textContent = value;\n    }\n  });\n\n  rows.push(newRow);\n}\n\nfunction addInput(nameInput, type, text, dataset) {\n  const input = document.createElement('input');\n  const label = document.createElement('label');\n\n  input.type = type;\n  input.name = nameInput;\n  label.textContent = `${text}:`;\n  input.dataset.qa = dataset;\n\n  label.append(input);\n\n  return label;\n}\n\nfunction notification(isSuccess, title, message) {\n  const mes = document.createElement('div');\n\n  mes.dataset.qa = 'notification';\n  mes.classList.add('notification');\n\n  if (isSuccess) {\n    mes.classList.add('success');\n  } else {\n    mes.classList.add('error');\n  }\n\n  const titleMes = document.createElement('h3');\n\n  titleMes.textContent = title;\n\n  const messageText = document.createElement('p');\n\n  messageText.textContent = message;\n\n  mes.append(titleMes, messageText);\n\n  document.body.append(mes);\n\n  setTimeout(() => mes.remove(), 3000);\n}\n\nlet currentSortColumn = null;\nlet isAscending = true;\n\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const index = e.target.cellIndex;\n  const content = firstRow.cells[index].textContent.trim();\n  const type = !isNaN(content.replace(/[,$]/g, '')) ? 'number' : 'string';\n\n  if (currentSortColumn === index) {\n    isAscending = !isAscending;\n  } else {\n    currentSortColumn = index;\n    isAscending = true;\n  }\n\n  rows.length = 0;\n  rows.push(...body.rows);\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].textContent.trim().replace(/[,$]/g, '');\n    const cellB = rowB.cells[index].textContent.trim().replace(/[,$]/g, '');\n\n    let result;\n\n    if (type === 'number') {\n      result = parseFloat(cellA) - parseFloat(cellB);\n    } else {\n      result = cellA.localeCompare(cellB);\n    }\n\n    return isAscending ? result : -result;\n  });\n\n  rows.forEach((child) => body.appendChild(child));\n});\n\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  rows.forEach((row) => row.classList.remove('active'));\n\n  const clickedRow = e.target.parentElement;\n\n  clickedRow.classList.add('active');\n});\n\ntable.addEventListener('dblclick', (e) => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  if (currentEditingCell) {\n    return;\n  }\n\n  const cell = e.target;\n  const initialValue = cell.textContent.trim();\n  const input = document.createElement('input');\n\n  input.value = initialValue;\n  input.classList.add('cell-input');\n\n  cell.textContent = '';\n  cell.appendChild(input);\n\n  input.focus();\n\n  input.addEventListener('keydown', (ev) => {\n    if (ev.key === 'Enter') {\n      saveChanges(input, cell, initialValue);\n    }\n  });\n\n  input.addEventListener('blur', () => {\n    saveChanges(input, cell, initialValue);\n  });\n\n  currentEditingCell = cell;\n});\n\nfunction saveChanges(input, cell, initialValue) {\n  const newValue = input.value.trim();\n\n  if (newValue === '') {\n    cell.textContent = initialValue;\n  } else {\n    cell.textContent = newValue;\n  }\n\n  currentEditingCell = null;\n}\n\naddForm();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","form","button","selected","labelSelect","nameForm","positionForm","ageForm","salaryForm","table","document","querySelector","body","rows","firstRow","currentEditingCell","addInput","nameInput","type","text","dataset","input","createElement","label","textContent","concat","qa","append","notification","isSuccess","title","message","mes","classList","add","titleMes","messageText","setTimeout","remove","currentSortColumn","isAscending","saveChanges","cell","initialValue","newValue","value","trim","addEventListener","e","target","tagName","index","cellIndex","isNaN","content","cells","replace","push","apply","sort","rowA","rowB","result","cellA","cellB","parseFloat","localeCompare","forEach","child","appendChild","row","clickedRow","parentElement","focus","ev","key","options","Option","option","className","preventDefault","nameEmploye","position","age","Number","salary","office","addEmployeeToTable","_len","arguments","args","_key","newRow","insertRow","newCell","insertCell","toLocaleString","reset"],"version":3,"file":"index.9124f9bc.js.map"}